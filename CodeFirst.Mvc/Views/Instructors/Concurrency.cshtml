@model CodeFirst.Mvc.Models.InstructorConcurrencyResolve

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<h4>Current</h4>
<hr />
<dl class="dl-horizontal">
    <dt>
        @Html.DisplayNameFor(model => model.Current.OfficeAssignment.Location)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Current.OfficeAssignment.Location)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Current.LastName)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Current.LastName)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Current.FirstName)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Current.FirstName)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Current.HireDate)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Current.HireDate)
    </dd>

</dl>

<h4>Database</h4>
<hr />
<dl class="dl-horizontal">
    <dt>
        @Html.DisplayNameFor(model => model.Database.OfficeAssignment.Location)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Database.OfficeAssignment.Location)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Database.LastName)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Database.LastName)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Database.FirstName)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Database.FirstName)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Database.HireDate)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Database.HireDate)
    </dd>

</dl>

@using (Html.BeginForm("Edit", "Instructors"))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Instructor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Database.PersonID)
        @Html.HiddenFor(model => model.Database.Timestamp)


        <div class="form-group">
            @Html.LabelFor(model => model.Database.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Database.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Database.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Database.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Database.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Database.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Database.HireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Database.HireDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Database.HireDate, "", new { @class = "text-danger" })
            </div>
        </div>

  
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
